{"version":3,"sources":["store/admin/types.ts","store/photos/actions.ts","utils/helpers/keep-token.ts","store/categories/types.ts","store/catalog/types.ts","store/hashtags/actions.ts","store/admin/actions.ts","store/categories/actions.ts","store/catalog/actions.ts","store/photos/types.ts","serviceWorker.ts","modules/shared/WaitingComponent.tsx","services/api.constants.ts","utils/helpers/fetch.ts","services/admin/auth.ts","store/admin/sagas.ts","services/admin/hashtags.ts","store/hashtags/sagas.ts","services/admin/categories.ts","store/categories/sagas.ts","services/admin/photos.ts","store/photos/sagas.ts","services/user/photos.ts","store/catalog/sagas.ts","store/rootSaga.ts","store/admin/reducers.ts","store/hashtags/reducers.ts","store/categories/reducers.ts","store/photos/reducers.ts","store/catalog/reducers.ts","store/reducers.ts","store/store.ts","modules/AppRouter.tsx","index.tsx","store/hashtags/types.ts"],"names":["AdminActionType","__webpack_require__","d","__webpack_exports__","uploadPhoto","uploadPhotoSuccess","uploadPhotoError","loadAllPhotos","loadAllPhotosSuccess","loadAllPhotosError","loadDetailPage","loadDetailPageSuccess","loadDetailPageError","updateOnePhoto","updateOnePhotoError","updateOnePhotoSuccess","deleteOnePhoto","deleteOnePhotoError","deleteOnePhotoSuccess","_types__WEBPACK_IMPORTED_MODULE_0__","payload","type","PhotosActionType","UPLOAD_PHOTO","UPLOAD_PHOTO_SUCCESS","error","UPLOAD_PHOTO_ERROR","LOAD_ALL_PHOTOS","LOAD_ALL_PHOTOS_SUCCESS","LOAD_ALL_PHOTOS_ERROR","id","DETAIL_PHOTO_PAGE","data","DETAIL_PHOTO_PAGE_SUCCESS","DETAIL_PHOTO_PAGE_ERROR","UPDATE_ONE_PHOTO","UPDATE_ONE_PHOTO_ERROR","UPDATE_ONE_PHOTO_SUCCESS","DELETE_ONE_PHOTO","DELETE_ONE_PHOTO_ERROR","DELETE_ONE_PHOTO_SUCCESS","getLSUser","isAuthOk","setLSUser","delLSUser","has","localStorage","getItem","JSON","parse","user","token","val","stringify","setItem","removeItem","CategoryActionType","CatalogActionType","loadHashtags","loadHashtagsSuccess","loadHashtagsError","addHashTag","addHashTagSuccess","addHashTagError","deleteHashtag","deleteHashtagError","HashtagActionType","LOAD_HASHTAGS","LOAD_HASHTAGS_SUCCESS","LOAD_HASHTAGS_ERROR","ADD_HASHTAG","ADD_HASHTAG_SUCCESS","ADD_HASHTAG_ERROR","DELETE_HASHTAG","DELETE_HASHTAG_ERROR","makeLoginAsync","makeLoginSuccess","makeLoginError","makeLogout","MAKE_LOGIN","MAKE_LOGIN_SUCCESS","MAKE_LOGIN_ERROR","MAKE_LOGOUT","getCategories","getCategoriesSuccess","getCategoriesError","GET_CATEGORIES","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_ERROR","loadMainPagePhotos","loadMainPagePhotosSuccess","loadMainPagePhotosError","LOAD_MAIN_PAGE_PHOTOS","LOAD_MAIN_PAGE_PHOTOS_SUCCESS","LOAD_MAIN_PAGE_PHOTOS_ERROR","Boolean","window","location","hostname","match","LoadingComponent","react_default","a","createElement","className","WaitingComponent","Component","props","react","fallback","API_URL","URLS","LOGIN_URL","concat","HASHTAGS","PHOTO_UPLOAD","PHOTO_ALL","PHOTO_BY_ID","PHOTO_ONE_UPDATE","CATEGORY","USER_MAIN_PAGE_PHOTOS","$post","url","auth","fetch","method","headers","Authorization","Content-Type","body","then","res","json","$postFile","$get","$delete","adminAuthService","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","post","wrap","_context","prev","next","sent","success","abrupt","toString","stop","_x","apply","this","arguments","loginFlowSaga","authorizeSaga","makeLogoutSaga","task","take","fork","cancel","_marked","_context2","call","put","push","t0","cancelled","console","log","finish","_marked2","_context3","_marked3","adminSagas","takeEvery","adminAddHashTag","adminGetHashTags","_ref2","_callee2","adminDeleteHashtag","_ref3","_callee3","del","_x2","loadHashtagsSaga","addHashTagSaga","deleteHashtagSaga","sagas_marked","sagas_marked2","sagas_marked3","hashtagSagas","adminGetCategories","getCategoriesSaga","categories_sagas_marked","categorySagas","adminUploadPhoto","form","adminAllPhotos","adminOnePhoto","obj","adminOnePhotoUpdate","_ref4","_callee4","_context4","_x3","adminDeleteOnePhoto","_ref5","_callee5","_context5","_x4","uploadPhotoSaga","loadAllPhotosSaga","loadDetailPageSaga","updateDetailPhotoSaga","deleteOnePhotoSaga","photos_sagas_marked","photos_sagas_marked2","photos_sagas_marked3","_marked4","_marked5","photosSagas","getPhotosMainPage","loadMainPhotosSaga","category","catalog_sagas_marked","catalogSagas","rootSaga","all","toConsumableArray","rootSaga_marked","initialState","adminLogin","adminReducer","state","length","undefined","action","_objectSpread","_action$payload","username","add","load","status","delete","hashtagReducer","reducers_objectSpread","categoriesReducer","categories_reducers_objectSpread","addPhotosAdmin","allPhotosAdmin","detailPhotoPage","updatingPhoto","deletingPhoto","photosReducer","photos_reducers_objectSpread","loadingMainPage","photosOnMainPage","catalogReducer","catalog_reducers_objectSpread","rootReducer","history","combineReducers","admin","hashtags","categories","photos","catalog","router","connectRouter","sagaMiddleware","createSagaMiddleware","createBrowserHistory","createStore","createRootReducer","composeWithDevTools","applyMiddleware","routerMiddleware","run","Admin","lazy","e","bind","App","Promise","resolve","setTimeout","slicedToArray","ReactDOM","render","es","store","configureStore","esm","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b0ec683.chunk.js","sourcesContent":["import {ErrorMessage, LoadingStatus} from \"../../interfaces/storage.interface\";\n\nexport interface AdminState {\n    readonly adminLogin: LoadingStatus;\n    readonly user: AdminUserState | null;\n\n}\n\nexport interface AdminUserState {\n    readonly username: string | null;\n    readonly token: string | null;\n}\n\nexport enum AdminActionType {\n\n    MAKE_LOGIN = \"MAKE_LOGIN\",\n    MAKE_LOGIN_SUCCESS = \"MAKE_LOGIN_SUCCESS\",\n    MAKE_LOGIN_ERROR = \"MAKE_LOGIN_ERROR\",\n\n    MAKE_LOGOUT = \"MAKE_LOGOUT\"\n}\n\nexport interface FormAdminLogin {\n    username: string | null;\n    password: string | null;\n}\n\n\nexport type AdminActions =\n    { type: AdminActionType.MAKE_LOGIN_ERROR, payload: ErrorMessage } |\n    { type: AdminActionType.MAKE_LOGIN, payload: FormAdminLogin } |\n    { type: AdminActionType.MAKE_LOGIN_SUCCESS, payload: AdminUserState } |\n\n    { type: AdminActionType.MAKE_LOGOUT };\n","import {Picture} from \"../../interfaces/picture\";\nimport {UploadPicture} from \"../../interfaces/uploadPicture\";\nimport {PhotosActions, PhotosActionType} from \"./types\";\nimport {UpdatePicture} from \"../../interfaces/updatePicture\";\n\nexport const uploadPhoto = (payload: UploadPicture): PhotosActions => ({\n    type: PhotosActionType.UPLOAD_PHOTO,\n    payload\n});\n\nexport const uploadPhotoSuccess = (): PhotosActions => ({\n    type: PhotosActionType.UPLOAD_PHOTO_SUCCESS\n});\n\nexport const uploadPhotoError = (error: string | null): PhotosActions => ({\n    type: PhotosActionType.UPLOAD_PHOTO_ERROR,\n    payload: { error }\n});\n\n\nexport const loadAllPhotos = (): PhotosActions => ({\n    type: PhotosActionType.LOAD_ALL_PHOTOS\n});\n\nexport const loadAllPhotosSuccess = (payload: Picture[]): PhotosActions => ({\n    type: PhotosActionType.LOAD_ALL_PHOTOS_SUCCESS,\n    payload: payload\n});\n\nexport const loadAllPhotosError = (error: string | null): PhotosActions => ({\n    type: PhotosActionType.LOAD_ALL_PHOTOS_ERROR,\n    payload: {error}\n});\n\n\nexport const loadDetailPage = (id: string): PhotosActions => ({\n    type: PhotosActionType.DETAIL_PHOTO_PAGE,\n    payload: {id}\n});\n\nexport const loadDetailPageSuccess = (data: Picture): PhotosActions => ({\n    type: PhotosActionType.DETAIL_PHOTO_PAGE_SUCCESS,\n    payload: data\n});\n\nexport const loadDetailPageError = (error: string | null): PhotosActions => ({\n    type: PhotosActionType.DETAIL_PHOTO_PAGE_ERROR,\n    payload: {error}\n});\n\nexport const updateOnePhoto = (data: UpdatePicture): PhotosActions => ({\n    type: PhotosActionType.UPDATE_ONE_PHOTO,\n    payload: data\n});\n\nexport const updateOnePhotoError = (data: string | null): PhotosActions => ({\n    type: PhotosActionType.UPDATE_ONE_PHOTO_ERROR,\n    payload: {error: data}\n});\n\nexport const updateOnePhotoSuccess = (): PhotosActions => ({\n    type: PhotosActionType.UPDATE_ONE_PHOTO_SUCCESS\n});\n\nexport const deleteOnePhoto = (id: string): PhotosActions => ({\n    type: PhotosActionType.DELETE_ONE_PHOTO,\n    payload: {id}\n});\n\nexport const deleteOnePhotoError = (data: string | null): PhotosActions => ({\n    type: PhotosActionType.DELETE_ONE_PHOTO_ERROR,\n    payload: {error: data}\n});\n\nexport const deleteOnePhotoSuccess = (): PhotosActions => ({\n    type: PhotosActionType.DELETE_ONE_PHOTO_SUCCESS\n});\n","import {AdminUserState} from \"../../store/admin/types\";\n\nconst LS_TOKEN_NAME = \"auth-token\";\n\nexport const getLSUser = (): AdminUserState => {\n    const has = localStorage.getItem(LS_TOKEN_NAME);\n    return has ? JSON.parse(has) : null;\n};\n\nexport const isAuthOk = (): boolean => {\n    const user = getLSUser();\n    return user && !!user.token;\n};\n\nexport const setLSUser = (val: AdminUserState): void => {\n    const data = JSON.stringify(val);\n    localStorage.setItem(LS_TOKEN_NAME, data);\n};\n\nexport const delLSUser = (): void => {\n    localStorage.removeItem(LS_TOKEN_NAME);\n};\n","import {ErrorMessage, LoadingStatus} from \"../../interfaces/storage.interface\";\nimport {Category} from \"../../interfaces/category\";\n\n\nexport interface StateCategory {\n    readonly status: LoadingStatus;\n    readonly data: Category[];\n}\n\n\nexport enum CategoryActionType {\n    GET_CATEGORIES = \"GET_CATEGORIES\",\n    GET_CATEGORIES_SUCCESS = \"GET_CATEGORIES_SUCCESS\",\n    GET_CATEGORIES_ERROR = \"GET_CATEGORY_ERROR\"\n}\n\n\nexport type CategoryActions =\n    { type: CategoryActionType.GET_CATEGORIES } |\n    { type: CategoryActionType.GET_CATEGORIES_SUCCESS, payload: Category[] } |\n    { type: CategoryActionType.GET_CATEGORIES_ERROR, payload: ErrorMessage };\n","import {PictureLight} from \"../../interfaces/picture\";\nimport {ErrorMessage, LoadingStatus} from \"../../interfaces/storage.interface\";\n\n\nexport interface CatalogState {\n    readonly photosOnMainPage: PictureLight[];\n    readonly loadingMainPage: LoadingStatus;\n}\n\n\n\nexport enum CatalogActionType {\n    LOAD_MAIN_PAGE_PHOTOS = \"LOAD_MAIN_PAGE_PHOTOS\",\n    LOAD_MAIN_PAGE_PHOTOS_SUCCESS = \"LOAD_MAIN_PAGE_PHOTOS_SUCCESS\",\n    LOAD_MAIN_PAGE_PHOTOS_ERROR = \"LOAD_MAIN_PAGE_PHOTOS_ERROR\"\n}\n\nexport type CatalogActions =\n    { type: CatalogActionType.LOAD_MAIN_PAGE_PHOTOS, payload: string } |\n    { type: CatalogActionType.LOAD_MAIN_PAGE_PHOTOS_SUCCESS, payload: PictureLight[] } |\n    { type: CatalogActionType.LOAD_MAIN_PAGE_PHOTOS_ERROR, payload: ErrorMessage }","import {Hashtag} from \"../../interfaces/hashtag\";\nimport {HashtagActions, HashtagActionType} from \"./types\";\n\n\nexport const loadHashtags = (): HashtagActions => ({\n    type: HashtagActionType.LOAD_HASHTAGS\n});\n\nexport const loadHashtagsSuccess = (payload: Hashtag[]): HashtagActions => ({\n    type: HashtagActionType.LOAD_HASHTAGS_SUCCESS,\n    payload\n});\n\nexport const loadHashtagsError = (payload: string | null): HashtagActions => ({\n   type: HashtagActionType.LOAD_HASHTAGS_ERROR,\n   payload: { error: payload }\n});\n\nexport const addHashTag = (payload: {tag: string}): HashtagActions => ({\n    type: HashtagActionType.ADD_HASHTAG,\n    payload\n});\n\nexport const addHashTagSuccess = (): HashtagActions => ({\n    type: HashtagActionType.ADD_HASHTAG_SUCCESS\n});\n\nexport const addHashTagError = (error: string | null): HashtagActions => ({\n    type: HashtagActionType.ADD_HASHTAG_ERROR,\n    payload: { error }\n});\n\n\n\nexport const deleteHashtag = (id: string): HashtagActions => ({\n    type: HashtagActionType.DELETE_HASHTAG,\n    payload: { id }\n});\n\nexport const deleteHashtagError = (error: string | null): HashtagActions => ({\n    type: HashtagActionType.DELETE_HASHTAG_ERROR,\n    payload: { error }\n});\n\n","import {AdminActionType, FormAdminLogin, AdminUserState, AdminActions} from \"./types\";\n\n\n\nexport const makeLoginAsync = (payload: FormAdminLogin): AdminActions =>\n    ({type: AdminActionType.MAKE_LOGIN, payload});\n\nexport const makeLoginSuccess = (payload: AdminUserState): AdminActions =>\n    ({type: AdminActionType.MAKE_LOGIN_SUCCESS, payload});\n\nexport const makeLoginError = (payload: string | null): AdminActions => {\n    return {\n        type: AdminActionType.MAKE_LOGIN_ERROR,\n        payload: { error: payload }\n    }\n};\n\nexport const makeLogout = (): AdminActions => ({\n    type: AdminActionType.MAKE_LOGOUT\n});\n","import {Category} from \"../../interfaces/category\";\nimport {CategoryActions, CategoryActionType} from \"./types\";\n\n\nexport const getCategories = (): CategoryActions => ({\n   type: CategoryActionType.GET_CATEGORIES\n});\n\nexport const getCategoriesSuccess = (payload: Category[]): CategoryActions => ({\n    type: CategoryActionType.GET_CATEGORIES_SUCCESS,\n    payload\n});\n\nexport const getCategoriesError = (payload: string | null): CategoryActions => ({\n    type: CategoryActionType.GET_CATEGORIES_ERROR,\n    payload: {error: payload}\n});\n","import {CatalogActions, CatalogActionType} from \"./types\";\nimport {PictureLight} from \"../../interfaces/picture\";\n\n\nexport const loadMainPagePhotos = (payload: string): CatalogActions => ({\n    type: CatalogActionType.LOAD_MAIN_PAGE_PHOTOS, payload\n});\n\nexport const loadMainPagePhotosSuccess = (payload: PictureLight[]): CatalogActions => ({\n    type: CatalogActionType.LOAD_MAIN_PAGE_PHOTOS_SUCCESS, payload\n});\n\nexport const loadMainPagePhotosError = (payload: string | null): CatalogActions => ({\n    type: CatalogActionType.LOAD_MAIN_PAGE_PHOTOS_ERROR, payload: { error: payload }\n});\n","import {UploadPicture} from \"../../interfaces/uploadPicture\";\nimport {Picture} from \"../../interfaces/picture\";\nimport {ErrorMessage, GetById, LoadingStatus} from \"../../interfaces/storage.interface\";\nimport {UpdatePicture} from \"../../interfaces/updatePicture\";\n\n\nexport interface StatePhotos {\n    readonly allPhotosAdmin: {\n        readonly status: LoadingStatus;\n        readonly data: Picture[];\n    };\n    readonly addPhotosAdmin: LoadingStatus;\n    readonly detailPhotoPage: {\n        readonly status: LoadingStatus;\n        readonly data: Picture | null;\n    }\n    readonly updatingPhoto: LoadingStatus;\n    readonly deletingPhoto: LoadingStatus;\n}\n\n\nexport enum PhotosActionType {\n\n    UPLOAD_PHOTO = \"UPLOAD_PHOTO\",\n    UPLOAD_PHOTO_SUCCESS = \"UPLOAD_PHOTO_SUCCESS\",\n    UPLOAD_PHOTO_ERROR = \"UPLOAD_PHOTO_ERROR\",\n\n    LOAD_ALL_PHOTOS = \"LOAD_ALL_PHOTOS\",\n    LOAD_ALL_PHOTOS_SUCCESS = \"LOAD_ALL_PHOTOS_SUCCESS\",\n    LOAD_ALL_PHOTOS_ERROR = \"LOAD_ALL_PHOTOS_ERROR\",\n\n    DETAIL_PHOTO_PAGE = \"DETAIL_PHOTO_PAGE\",\n    DETAIL_PHOTO_PAGE_SUCCESS = \"DETAIL_PHOTO_PAGE_SUCCESS\",\n    DETAIL_PHOTO_PAGE_ERROR = \"DETAIL_PHOTO_PAGE_ERROR\",\n\n    UPDATE_ONE_PHOTO = \"UPDATE_ONE_PHOTO\",\n    UPDATE_ONE_PHOTO_ERROR = \"UPDATE_ONE_PHOTO_ERROR\",\n    UPDATE_ONE_PHOTO_SUCCESS = \"UPDATE_ONE_PHOTO_SUCCESS\",\n\n    DELETE_ONE_PHOTO = \"DELETE_ONE_PHOTO\",\n    DELETE_ONE_PHOTO_ERROR = \"DELETE_ONE_PHOTO_ERROR\",\n    DELETE_ONE_PHOTO_SUCCESS = \"DELETE_ONE_PHOTO_SUCCESS\",\n    DELETE_ONE_PHOTO_REDIRECT = \"DELETE_ONE_PHOTO_REDIRECT\"\n}\n\n\nexport type PhotosActions =\n\n    { type: PhotosActionType.UPLOAD_PHOTO, payload: UploadPicture } |\n    { type: PhotosActionType.UPLOAD_PHOTO_ERROR, payload: ErrorMessage } |\n    { type: PhotosActionType.UPLOAD_PHOTO_SUCCESS } |\n\n    { type: PhotosActionType.LOAD_ALL_PHOTOS } |\n    { type: PhotosActionType.LOAD_ALL_PHOTOS_SUCCESS, payload: Picture[] } |\n    { type: PhotosActionType.LOAD_ALL_PHOTOS_ERROR, payload: ErrorMessage } |\n\n    { type: PhotosActionType.DETAIL_PHOTO_PAGE, payload: GetById } |\n    { type: PhotosActionType.DETAIL_PHOTO_PAGE_SUCCESS, payload: Picture } |\n    { type: PhotosActionType.DETAIL_PHOTO_PAGE_ERROR, payload: ErrorMessage } |\n\n    { type: PhotosActionType.UPDATE_ONE_PHOTO, payload: UpdatePicture } |\n    { type: PhotosActionType.UPDATE_ONE_PHOTO_SUCCESS } |\n    { type: PhotosActionType.UPDATE_ONE_PHOTO_ERROR, payload: ErrorMessage} |\n\n    { type: PhotosActionType.DELETE_ONE_PHOTO, payload: GetById } |\n    { type: PhotosActionType.DELETE_ONE_PHOTO_ERROR, payload: ErrorMessage } |\n    { type: PhotosActionType.DELETE_ONE_PHOTO_SUCCESS } |\n    { type: PhotosActionType.DELETE_ONE_PHOTO_REDIRECT }\n    ;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Suspense} from \"react\";\n\nimport './LoadingComponent.scss';\n\n\nconst LoadingComponent: React.FC = () => {\n    return (\n      <div className=\"loading-component\">\n          <div className=\"yunko\">Yunko\n\n              <div className=\"describe-yunko\">\n                  photographer yulia nerubenko\n              </div>\n          </div>\n\n      </div>\n    );\n};\n\n\nexport default function WaitingComponent(Component: React.ComponentType) {\n    return (props: any) => (\n        <Suspense fallback={LoadingComponent(props)}>\n            <Component {...props} />\n        </Suspense>\n    );\n}","\n\nexport const API_URL = 'http://localhost:3002';\n\nexport const URLS = {\n    LOGIN_URL: `${API_URL}/auth/login`,\n\n    HASHTAGS: `${API_URL}/admin/hashtags`,\n\n    PHOTO_UPLOAD: `${API_URL}/photos/upload`,\n    PHOTO_ALL: `${API_URL}/photos/all`,\n    PHOTO_BY_ID: `${API_URL}/photos/photo`,\n\n    PHOTO_ONE_UPDATE: `${API_URL}/photos/update`,\n\n    CATEGORY: `${API_URL}/admin/categories`,\n\n    USER_MAIN_PAGE_PHOTOS: `${API_URL}/main/photos`,\n};\n\n","import {getLSUser} from \"./keep-token\";\n\nexport const $post = (url: string, data: Object): Promise<any> => {\n    const user = getLSUser();\n    const auth = user && user.token ? `Bearer ${user.token}` : '';\n\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n            'Authorization': auth,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    }).then(res => res.json());\n};\n\n\nexport const $postFile = (url: string, data: FormData): Promise<any> => {\n    const user = getLSUser();\n    const auth = user && user.token ? `Bearer ${user.token}` : '';\n\n    return fetch(url, {\n        method: 'POST',\n        headers: {\n            'Authorization': auth\n        },\n        body: data\n    }).then(res => res.json());\n\n};\n\nexport const $get = (url: string): Promise<any> => {\n    const user = getLSUser();\n    const auth = user && user.token ? `Bearer ${user.token}` : '';\n\n    return fetch(url, {\n        method: 'GET',\n        headers: {\n            'Authorization': auth,\n            'Content-Type': 'application/json'\n        }\n    }).then(res => res.json());\n\n};\n\nexport const $delete = (url: string): Promise<any> => {\n    const user = getLSUser();\n    const auth = user && user.token ? `Bearer ${user.token}` : '';\n    return fetch(url, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': auth,\n            'Content-Type': 'application/json'\n        }\n    }).then(res => res.json());\n};","import {AdminUserState, FormAdminLogin} from \"../../store/admin/types\";\nimport {URLS} from \"../api.constants\";\nimport {$post} from \"../../utils/helpers/fetch\";\nimport {ApiResponse} from \"../../interfaces/api.interface\";\n\n\nexport const adminAuthService = async (payload: FormAdminLogin): Promise<AdminUserState> => {\n    let post: ApiResponse<AdminUserState> = await $post(URLS.LOGIN_URL, payload);\n    if (post.success) {\n        return post.data;\n    } else {\n        throw post.error ? post.error.toString() : 'Error';\n    }\n};\n\n","import {makeLoginError, makeLoginSuccess,} from \"./actions\";\nimport {takeEvery, put, call, cancelled, take, fork, cancel} from 'redux-saga/effects';\nimport {adminAuthService} from \"../../services/admin/auth\";\nimport {AdminActionType, AdminUserState, FormAdminLogin} from \"./types\";\nimport {delLSUser, setLSUser} from \"../../utils/helpers/keep-token\";\nimport {push} from \"connected-react-router\";\n\n\nexport function* loginFlowSaga() {\n    while (true) {\n        const { payload } = yield take(AdminActionType.MAKE_LOGIN);\n        const task = yield fork(authorizeSaga, payload);\n        const action = yield take([AdminActionType.MAKE_LOGOUT, AdminActionType.MAKE_LOGIN_ERROR]);\n        if (action.type === AdminActionType.MAKE_LOGOUT) {\n            yield cancel(task);\n            yield delLSUser();\n        }\n    }\n}\n\nfunction* authorizeSaga(payload: FormAdminLogin) {\n    try {\n        const data: AdminUserState = yield call(adminAuthService, payload);\n        yield put(makeLoginSuccess(data));\n        yield setLSUser(data);\n        yield put(push('/admin/main'));\n        return data;\n    } catch (error) {\n        yield put(makeLoginError(error.toString()));\n    } finally {\n        if (yield cancelled()) {\n            console.log('CANCELLED'); // TODO\n        }\n    }\n}\n\n\nfunction* makeLogoutSaga() {\n    yield delLSUser();\n}\n\nexport const adminSagas = [\n    takeEvery(AdminActionType.MAKE_LOGOUT, makeLogoutSaga),\n    fork(loginFlowSaga)\n];\n\n","import {ApiResponse} from \"../../interfaces/api.interface\";\nimport {$delete, $get, $post} from \"../../utils/helpers/fetch\";\nimport {URLS} from \"../api.constants\";\nimport {Hashtag} from \"../../interfaces/hashtag\";\n\nexport const adminAddHashTag = async (payload: {tag: string}): Promise<boolean>  => {\n    let post: ApiResponse<any> = await $post(URLS.HASHTAGS, payload);\n    if (post.success) {\n        return true;\n    } else {\n        throw post.error ? post.error.toString() : 'Error';\n    }\n};\n\nexport const adminGetHashTags = async (): Promise<Hashtag[]> => {\n    const data: ApiResponse<Hashtag[]> = await $get(URLS.HASHTAGS);\n    if (data.success) {\n        return data.data;\n    } else {\n        throw data.error ? data.error.toString() : 'Error';\n    }\n};\n\nexport const adminDeleteHashtag = async (id: string): Promise<boolean> => {\n    const del: ApiResponse<any> = await $delete(URLS.HASHTAGS + '/' + id);\n    if (del.success) {\n        return true;\n    } else {\n        throw del.error ? del.error.toString() : 'Error';\n    }\n};","import {call, put, takeEvery} from \"redux-saga/effects\";\nimport {adminAddHashTag, adminDeleteHashtag, adminGetHashTags} from \"../../services/admin/hashtags\";\nimport {Hashtag} from \"../../interfaces/hashtag\";\nimport {addHashTagError, addHashTagSuccess, deleteHashtagError, loadHashtagsError, loadHashtagsSuccess} from \"./actions\";\nimport {HashtagActionType} from \"./types\";\n\nfunction* loadHashtagsSaga() {\n    try {\n        const data: Hashtag[] = yield call(adminGetHashTags);\n        yield put(loadHashtagsSuccess(data))\n    } catch (e) {\n        yield put(loadHashtagsError(e.toString()));\n    }\n}\n\nfunction* addHashTagSaga(payload: any) {\n    try {\n        yield call(adminAddHashTag, payload.payload);\n        yield put(addHashTagSuccess());\n        yield loadHashtagsSaga();\n\n    } catch (e) {\n        yield put(addHashTagError(e.toString()))\n    }\n}\n\nfunction* deleteHashtagSaga(payload: any) {\n    try {\n        const {id} = payload.payload;\n        yield call(adminDeleteHashtag, id);\n        yield loadHashtagsSaga();\n    } catch (e) {\n        yield put(deleteHashtagError(e.toString()));\n    }\n}\n\n\nexport const hashtagSagas = [\n    takeEvery(HashtagActionType.LOAD_HASHTAGS, loadHashtagsSaga),\n    takeEvery(HashtagActionType.ADD_HASHTAG, addHashTagSaga),\n    takeEvery(HashtagActionType.DELETE_HASHTAG, deleteHashtagSaga),\n];","import {ApiResponse} from \"../../interfaces/api.interface\";\nimport {URLS} from \"../api.constants\";\nimport {$get} from \"../../utils/helpers/fetch\";\nimport {Category} from \"../../interfaces/category\";\n\n\nexport const adminGetCategories = async (): Promise<Category[]> => {\n    const data: ApiResponse<Category[]> = await $get(URLS.CATEGORY);\n    if (data.success) {\n        return data.data;\n    } else {\n        throw data.error ? data.error.toString() : 'Error';\n    }\n};","import {call, put, takeEvery} from \"redux-saga/effects\";\nimport {adminGetCategories} from \"../../services/admin/categories\";\nimport {Category} from \"../../interfaces/category\";\nimport {getCategoriesError, getCategoriesSuccess} from \"./actions\";\nimport {CategoryActionType} from \"./types\";\n\n\nfunction* getCategoriesSaga() {\n    try {\n        const data: Category[] = yield call(adminGetCategories);\n        yield put(getCategoriesSuccess(data))\n    } catch (e) {\n        yield put(getCategoriesError(e.toString()));\n    }\n}\n\nexport const categorySagas = [\n    takeEvery(CategoryActionType.GET_CATEGORIES, getCategoriesSaga)\n];","import {ApiResponse} from \"../../interfaces/api.interface\";\nimport {URLS} from \"../api.constants\";\nimport {$delete, $get, $post, $postFile} from \"../../utils/helpers/fetch\";\nimport {Picture} from \"../../interfaces/picture\";\nimport {GetById} from \"../../interfaces/storage.interface\";\nimport {UpdatePicture} from \"../../interfaces/updatePicture\";\n\n\nexport const adminUploadPhoto = async (form: FormData): Promise<boolean> => {\n    const data: ApiResponse<any> = await $postFile(URLS.PHOTO_UPLOAD, form);\n    if (data.success) {\n        return true;\n    } else {\n        throw data.error ? data.error.toString() : 'Error';\n    }\n};\n\nexport const adminAllPhotos = async (): Promise<Picture[]> => {\n    const data: ApiResponse<Picture[]> = await $get(URLS.PHOTO_ALL);\n    if (data.success) {\n        return data.data;\n    } else {\n        throw data.error ? data.error.toString() : 'Error';\n    }\n};\n\nexport const adminOnePhoto = async (obj: GetById): Promise<Picture> => {\n    const data: ApiResponse<Picture> = await $get(URLS.PHOTO_BY_ID + '/' + obj.id);\n    if (data.success) {\n        return data.data;\n    } else {\n        throw data.error ? data.error.toString() : 'Error';\n    }\n};\n\nexport const adminOnePhotoUpdate = async (payload: UpdatePicture): Promise<boolean> => {\n    const data: ApiResponse<any> = await $post(URLS.PHOTO_ONE_UPDATE, payload);\n    if (data.success) {\n        return true;\n    } else {\n        throw data.error ? data.error.toString() : 'Error';\n    }\n};\n\nexport const adminDeleteOnePhoto = async (payload: GetById): Promise<boolean> => {\n    const data: ApiResponse<any> = await $delete(URLS.PHOTO_BY_ID + '/' + payload.id);\n    if (data.success) {\n        return true;\n    } else {\n        throw data.error ? data.error.toString() : 'Error';\n    }\n};\n","import {call, put, takeEvery} from \"redux-saga/effects\";\nimport {adminAllPhotos, adminDeleteOnePhoto, adminOnePhoto, adminOnePhotoUpdate, adminUploadPhoto} from \"../../services/admin/photos\";\nimport {Picture} from \"../../interfaces/picture\";\nimport {\n    deleteOnePhotoError, deleteOnePhotoSuccess,\n    loadAllPhotosError, loadAllPhotosSuccess, loadDetailPageError, loadDetailPageSuccess, updateOnePhotoError, updateOnePhotoSuccess,\n    uploadPhotoError,\n    uploadPhotoSuccess\n} from \"./actions\";\nimport {PhotosActionType} from \"./types\";\nimport {push} from \"connected-react-router\";\n\n\nfunction* uploadPhotoSaga(payload: any) {\n    try {\n        const form = payload.payload;\n        yield call(adminUploadPhoto, form);\n        yield put(uploadPhotoSuccess());\n        yield loadAllPhotosSaga();\n    } catch (e) {\n        yield put(uploadPhotoError(e.toString()));\n    }\n}\n\nfunction* loadAllPhotosSaga() {\n    try {\n        const data: Picture[] = yield call(adminAllPhotos);\n        yield put(loadAllPhotosSuccess(data));\n    } catch (e) {\n        yield put(loadAllPhotosError(e.toString()));\n    }\n}\n\nfunction* loadDetailPageSaga(obj: any) {\n    try {\n        const data: Picture = yield call(adminOnePhoto, obj.payload);\n        yield put(loadDetailPageSuccess(data));\n    } catch (e) {\n        yield put(loadDetailPageError(e.toString()));\n    }\n}\n\nfunction* updateDetailPhotoSaga(obj: any) {\n    try {\n        yield call(adminOnePhotoUpdate, obj.payload);\n        yield put(updateOnePhotoSuccess());\n    } catch (e) {\n        yield put(updateOnePhotoError(e.toString()))\n    }\n}\n\nfunction* deleteOnePhotoSaga(obj: any) {\n    try {\n        yield call(adminDeleteOnePhoto, obj.payload);\n        yield put(deleteOnePhotoSuccess());\n        yield put(push('/admin/main'));\n    } catch (e) {\n        yield put(deleteOnePhotoError(e.toString()));\n    }\n}\n\nexport const photosSagas = [\n    takeEvery(PhotosActionType.LOAD_ALL_PHOTOS, loadAllPhotosSaga),\n    takeEvery(PhotosActionType.UPLOAD_PHOTO, uploadPhotoSaga),\n    takeEvery(PhotosActionType.DETAIL_PHOTO_PAGE, loadDetailPageSaga),\n    takeEvery(PhotosActionType.UPDATE_ONE_PHOTO, updateDetailPhotoSaga),\n    takeEvery(PhotosActionType.DELETE_ONE_PHOTO, deleteOnePhotoSaga)\n];","import {PictureLight} from \"../../interfaces/picture\";\nimport {$post} from \"../../utils/helpers/fetch\";\nimport {URLS} from \"../api.constants\";\nimport {ApiResponse} from \"../../interfaces/api.interface\";\n\n\nexport const getPhotosMainPage = async (obj: any): Promise<PictureLight[]> => {\n    const data: ApiResponse<PictureLight[]> = await $post(URLS.USER_MAIN_PAGE_PHOTOS, obj);\n    if (data.success) {\n        return data.data;\n    } else {\n        throw data.error ? data.error.toString() : 'Error';\n    }\n};","import {CatalogActionType} from \"./types\";\nimport {put, takeEvery, call} from \"redux-saga/effects\";\nimport {loadMainPagePhotosError, loadMainPagePhotosSuccess} from \"./actions\";\nimport {getPhotosMainPage} from \"../../services/user/photos\";\nimport {PictureLight} from \"../../interfaces/picture\";\n\n\nfunction* loadMainPhotosSaga(obj: any) {\n    try {\n        const data: PictureLight[] = yield call(getPhotosMainPage, {category: obj.payload});\n        yield put(loadMainPagePhotosSuccess(data));\n    } catch (e) {\n        yield put(loadMainPagePhotosError(e.toString()));\n    }\n}\n\n\n\nexport const catalogSagas = [\n    takeEvery(CatalogActionType.LOAD_MAIN_PAGE_PHOTOS, loadMainPhotosSaga)\n];","import {all} from \"redux-saga/effects\";\nimport {adminSagas} from \"./admin/sagas\";\nimport {hashtagSagas} from \"./hashtags/sagas\";\nimport {categorySagas} from \"./categories/sagas\";\nimport {photosSagas} from \"./photos/sagas\";\nimport {catalogSagas} from \"./catalog/sagas\";\n\n\nexport default function* rootSaga () {\n    yield all([\n        ...adminSagas,\n        ...hashtagSagas,\n        ...categorySagas,\n        ...photosSagas,\n        ...catalogSagas\n    ]);\n}\n\n","import {AdminActions, AdminActionType, AdminState} from \"./types\";\nimport {getLSUser} from \"../../utils/helpers/keep-token\";\n\n\nconst initialState: AdminState = {\n    adminLogin: null,\n    user: getLSUser()\n};\n\n\nexport const adminReducer = (state = initialState, action: AdminActions): AdminState => {\n\n    switch (action.type) {\n\n        case AdminActionType.MAKE_LOGOUT: {\n            return {...state, user: null};\n        }\n\n        case AdminActionType.MAKE_LOGIN: {\n            return {...state, adminLogin: true};\n        }\n\n        case AdminActionType.MAKE_LOGIN_ERROR: {\n            const {error} = action.payload;\n            return {...state, adminLogin: error}\n        }\n\n        case AdminActionType.MAKE_LOGIN_SUCCESS: {\n            const {username, token} = action.payload;\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    username,\n                    token\n                },\n                adminLogin: null\n            }\n        }\n\n        default:\n            return state;\n    }\n\n};\n","import {HashtagActions, HashtagActionType, StateHashtags} from \"./types\";\n\n\nconst initialState: StateHashtags = {\n    add: null,\n    load: {\n        status: null,\n        data: []\n    },\n    delete: null\n};\n\n\nexport const hashtagReducer = (state = initialState, action: HashtagActions): StateHashtags => {\n    switch (action.type) {\n        case HashtagActionType.ADD_HASHTAG: {\n            return {\n                ...state,\n                add: true\n            };\n        }\n        case HashtagActionType.ADD_HASHTAG_SUCCESS: {\n            return {\n                ...state,\n                add: null\n            };\n        }\n        case HashtagActionType.ADD_HASHTAG_ERROR: {\n            const { error } = action.payload;\n            return {\n                ...state,\n                add: error\n            };\n        }\n\n        case HashtagActionType.LOAD_HASHTAGS: {\n            return {\n                ...state,\n                load: {\n                    ...state.load,\n                    status: true,\n                    data: []\n                }\n            };\n        }\n\n        case HashtagActionType.LOAD_HASHTAGS_SUCCESS: {\n            const data = action.payload;\n            return {\n                ...state,\n                load: {\n                    ...state.load,\n                    status: null,\n                    data\n                }\n            };\n        }\n\n        case HashtagActionType.LOAD_HASHTAGS_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                load: {\n                    ...state.load,\n                    status: error\n                }\n            };\n        }\n\n        default:\n            return state;\n\n    }\n};\n","import {CategoryActions, CategoryActionType, StateCategory} from \"./types\";\n\nconst initialState: StateCategory = {\n    status: null,\n    data: []\n};\n\nexport const categoriesReducer = (state = initialState, action: CategoryActions): StateCategory => {\n\n    switch (action.type) {\n        case CategoryActionType.GET_CATEGORIES: {\n            return {\n                ...state,\n                status: true\n            };\n        }\n\n        case CategoryActionType.GET_CATEGORIES_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                status: error\n            };\n        }\n\n        case CategoryActionType.GET_CATEGORIES_SUCCESS: {\n            const data = action.payload;\n            return {\n                ...state,\n                status: null,\n                data\n            };\n        }\n\n        default:\n            return state;\n\n    }\n};\n","import {PhotosActions, PhotosActionType, StatePhotos} from \"./types\";\n\nconst initialState: StatePhotos = {\n    addPhotosAdmin: null,\n    allPhotosAdmin: {\n        status: null,\n        data: []\n    },\n    detailPhotoPage: {\n        status: null,\n        data: null\n    },\n    updatingPhoto: null,\n    deletingPhoto: null\n};\n\nexport const photosReducer = (state = initialState, action: PhotosActions): StatePhotos => {\n\n    switch (action.type) {\n        case PhotosActionType.UPLOAD_PHOTO: {\n            return {\n                ...state,\n                addPhotosAdmin: true\n            };\n        }\n\n        case PhotosActionType.UPLOAD_PHOTO_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                addPhotosAdmin: error\n            };\n        }\n\n        case PhotosActionType.UPLOAD_PHOTO_SUCCESS: {\n            return {\n                ...state,\n                addPhotosAdmin: null\n            };\n        }\n\n        case PhotosActionType.LOAD_ALL_PHOTOS: {\n            return {\n                ...state,\n                allPhotosAdmin: {\n                    ...state.allPhotosAdmin,\n                    data: [],\n                    status: true\n                }\n            };\n        }\n\n        case PhotosActionType.LOAD_ALL_PHOTOS_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                allPhotosAdmin: {\n                    ...state.allPhotosAdmin,\n                    status: error\n                }\n            };\n        }\n\n        case PhotosActionType.LOAD_ALL_PHOTOS_SUCCESS: {\n            const data = action.payload;\n            return {\n                ...state,\n                allPhotosAdmin: {\n                    ...state.allPhotosAdmin,\n                    status: null,\n                    data\n                }\n            };\n        }\n\n        case PhotosActionType.DETAIL_PHOTO_PAGE: {\n            return {\n                ...state,\n                detailPhotoPage: {\n                    ...state.detailPhotoPage,\n                    status: true,\n                    data: null\n                }\n            };\n        }\n\n        case PhotosActionType.DETAIL_PHOTO_PAGE_SUCCESS: {\n            const data = action.payload;\n            return {\n                ...state,\n                detailPhotoPage: {\n                    ...state.detailPhotoPage,\n                    status: null,\n                    data\n                }\n            };\n        }\n\n        case PhotosActionType.DETAIL_PHOTO_PAGE_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                detailPhotoPage: {\n                    ...state.detailPhotoPage,\n                    status: error\n                }\n            };\n        }\n\n        case PhotosActionType.UPDATE_ONE_PHOTO: {\n            return {\n                ...state,\n                updatingPhoto: true\n            };\n        }\n\n        case PhotosActionType.UPDATE_ONE_PHOTO_SUCCESS: {\n            return {\n                ...state,\n                updatingPhoto: null\n            };\n        }\n\n        case PhotosActionType.UPDATE_ONE_PHOTO_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                updatingPhoto: error\n            };\n        }\n\n        case PhotosActionType.DELETE_ONE_PHOTO: {\n            return {\n                ...state,\n                deletingPhoto: true\n            };\n        }\n\n        case PhotosActionType.DELETE_ONE_PHOTO_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                deletingPhoto: error\n            };\n        }\n\n        case PhotosActionType.DELETE_ONE_PHOTO_SUCCESS: {\n            return {\n                ...state,\n                deletingPhoto: null\n            };\n        }\n\n        default:\n            return state;\n\n    }\n};\n","import {CatalogActions, CatalogActionType, CatalogState} from \"./types\";\n\nconst initialState: CatalogState = {\n    loadingMainPage: null,\n    photosOnMainPage: []\n};\n\nexport const catalogReducer = (state = initialState, action: CatalogActions): CatalogState => {\n\n    switch (action.type) {\n        case CatalogActionType.LOAD_MAIN_PAGE_PHOTOS: {\n            return {\n                ...state,\n                loadingMainPage: true\n            };\n        }\n\n        case CatalogActionType.LOAD_MAIN_PAGE_PHOTOS_SUCCESS: {\n            const data = action.payload;\n            return {\n                ...state,\n                loadingMainPage: null,\n                photosOnMainPage: data\n            }\n        }\n\n        case CatalogActionType.LOAD_MAIN_PAGE_PHOTOS_ERROR: {\n            const {error} = action.payload;\n            return {\n                ...state,\n                loadingMainPage: error\n            }\n        }\n\n        default:\n            return state;\n    }\n};","import { combineReducers } from \"redux\";\nimport {adminReducer} from \"./admin/reducers\";\nimport {hashtagReducer} from \"./hashtags/reducers\";\nimport {categoriesReducer} from \"./categories/reducers\";\nimport {photosReducer} from \"./photos/reducers\";\nimport {connectRouter} from 'connected-react-router';\nimport { History } from 'history';\nimport {catalogReducer} from \"./catalog/reducers\";\n\n\nconst rootReducer = (history: History) => combineReducers({\n    admin: adminReducer,\n    hashtags: hashtagReducer,\n    categories: categoriesReducer,\n    photos: photosReducer,\n    catalog: catalogReducer,\n    router: connectRouter(history)\n});\n\n\nexport type AppState = ReturnType< ReturnType<typeof rootReducer> >;\n\nexport default rootReducer;","import {applyMiddleware, createStore} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./rootSaga\";\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './reducers';\n\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const history = createBrowserHistory();\n\n\nexport default createStore(\n        createRootReducer(history),\n        composeWithDevTools(\n            applyMiddleware(\n                routerMiddleware(history),\n                sagaMiddleware\n            ),\n        ),\n);\n\nsagaMiddleware.run(rootSaga);\n","import React, {lazy} from \"react\";\nimport { Route } from \"react-router-dom\";\nimport WaitingComponent from \"./shared/WaitingComponent\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport {history} from '../store/store';\nimport {Switch} from \"react-router\";\n\nconst Admin = lazy(() => import(\"./admin/Admin/Admin\"));\nconst App = lazy(() => {\n    return Promise.all([\n        import(\"./app/App/App\"), // to show Loading component not less than 200ms\n        new Promise(resolve => setTimeout(resolve, 100))\n    ])\n        .then(([moduleExports]) => moduleExports);\n});\n\n\nexport const AppRouter: React.FC = () => {\n    const mainRoutes = ['/', '/fashion', '/advs', '/travel', '/wedding', '/contacts'];\n\n    return (\n        <ConnectedRouter history={history}>\n            <Switch>\n                <Route path={mainRoutes} exact component={WaitingComponent(App)} />\n                <Route path=\"/admin\" component={WaitingComponent(Admin)} />\n            </Switch>\n        </ConnectedRouter>\n\n    );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {AppRouter} from \"./modules/AppRouter\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/store\";\n\nimport './index.scss';\n\n\nReactDOM.render(<Provider store={configureStore}>\n    <AppRouter />\n</Provider>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","import {Hashtag} from \"../../interfaces/hashtag\";\nimport {ErrorMessage, GetById, LoadingStatus} from \"../../interfaces/storage.interface\";\n\n\nexport interface StateHashtags {\n    readonly add: LoadingStatus;\n    readonly load: {\n        readonly status: LoadingStatus;\n        readonly data: Hashtag[];\n    }\n    readonly delete: LoadingStatus;\n}\n\n\nexport enum HashtagActionType {\n    LOAD_HASHTAGS = \"LOAD_HASHTAGS\",\n    LOAD_HASHTAGS_SUCCESS = \"LOAD_HASHTAGS_SUCCESS\",\n    LOAD_HASHTAGS_ERROR = \"LOAD_HASHTAGS_ERROR\",\n\n    ADD_HASHTAG = \"ADD_HASHTAG\",\n    ADD_HASHTAG_SUCCESS = \"ADD_HASHTAG_SUCCESS\",\n    ADD_HASHTAG_ERROR = \"ADD_HASHTAG_ERROR\",\n\n\n    DELETE_HASHTAG = \"DELETE_HASHTAG\",\n    DELETE_HASHTAG_ERROR = \"DELETE_HASHTAG_ERROR\",\n}\n\n\nexport type HashtagActions =\n\n    { type: HashtagActionType.DELETE_HASHTAG_ERROR, payload: ErrorMessage } |\n    { type: HashtagActionType.DELETE_HASHTAG, payload: GetById } |\n\n    { type: HashtagActionType.ADD_HASHTAG, payload: {tag: string} } |\n    { type: HashtagActionType.ADD_HASHTAG_SUCCESS } |\n    { type: HashtagActionType.ADD_HASHTAG_ERROR, payload: ErrorMessage } |\n\n    { type: HashtagActionType.LOAD_HASHTAGS } |\n    { type: HashtagActionType.LOAD_HASHTAGS_SUCCESS, payload: Hashtag[] } |\n    { type: HashtagActionType.LOAD_HASHTAGS_ERROR, payload: ErrorMessage };\n"],"sourceRoot":""}